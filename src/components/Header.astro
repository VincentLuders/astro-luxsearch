---
export interface Props {
    currentPage?: 'opportunities' | 'hire-talent';
}

const { currentPage } = Astro.props;
---

<!-- Header -->
<header class="header">
    <div class="header-left">
        <a href="/" class="logo-link nav-link">
            <div class="logo">
                <img src="/assets/logo.png" alt="luxsearch® logo">
            </div>
            <div class="brand">
                <span class="brand-name">luxsearch®</span>
                <span class="brand-tagline">lux is searching you.</span>
            </div>
        </a>
    </div>
    <nav class="nav">
        <a href="/" class={`nav-link ${currentPage === 'opportunities' ? 'current' : ''}`}>Opportunities</a>
        <a href="/hire-talent" class={`nav-link ${currentPage === 'hire-talent' ? 'current' : ''}`}>Hire Talent</a>
    </nav>
    <button class="nav-toggle" id="nav-toggle" aria-label="Menu">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-menu">
            <line x1="3" y1="12" x2="21" y2="12"></line>
            <line x1="3" y1="6" x2="21" y2="6"></line>
            <line x1="3" y1="18" x2="21" y2="18"></line>
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon-close" style="display: none;">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
    </button>
</header> 

<div class="mobile-nav-menu" id="mobile-nav-menu">
    <div class="mobile-nav-panel">
        <a href="/" class={`nav-link ${currentPage === 'opportunities' ? 'current' : ''}`}>Opportunities</a>
        <a href="/hire-talent" class={`nav-link ${currentPage === 'hire-talent' ? 'current' : ''}`}>Hire Talent</a>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const navToggle = document.getElementById('nav-toggle');
        const mobileNav = document.getElementById('mobile-nav-menu');
        const iconMenu = navToggle.querySelector('.icon-menu');
        const iconClose = navToggle.querySelector('.icon-close');

        if (navToggle && mobileNav) {
            navToggle.addEventListener('click', () => {
                mobileNav.classList.toggle('is-open');
                navToggle.classList.toggle('is-active');

                if (mobileNav.classList.contains('is-open')) {
                    iconMenu.style.display = 'none';
                    iconClose.style.display = 'block';
                    document.body.style.overflow = 'hidden';
                } else {
                    iconMenu.style.display = 'block';
                    iconClose.style.display = 'none';
                    document.body.style.overflow = '';
                }
            });

            // Close menu when clicking outside
            mobileNav.addEventListener('click', (e) => {
                if (e.target === mobileNav) {
                    mobileNav.classList.remove('is-open');
                    navToggle.classList.remove('is-active');
                    iconMenu.style.display = 'block';
                    iconClose.style.display = 'none';
                    document.body.style.overflow = '';
                }
            });
        }
    });
</script> 