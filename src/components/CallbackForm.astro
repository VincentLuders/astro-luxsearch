---
// Callback Form Component - Follows Design System Architecture
// Uses existing design tokens and glass-hover effects
export interface Props {
    id?: string;
    title?: string;
    subtitle?: string;
}

const { 
    id = "callback", 
    title = "Request a Callback", 
    subtitle = "We'll get back to you within 24 hours" 
} = Astro.props;
---

<div class="callback-form-container" id={id}>
    <div class="card card-tall">
        <h3 class="title">{title}</h3>
        {subtitle && <p class="body-text callback-subtitle">{subtitle}</p>}
        
        <!-- Hidden form for Netlify detection -->
        <form name="callback-request" data-netlify="true" netlify-honeypot="bot-field" hidden>
            <input type="text" name="name" />
            <input type="tel" name="phone" />
            <input type="email" name="email" />
        </form>

        <!-- Actual callback form -->
        <form name="callback-request" id="callbackForm" data-netlify="true" method="POST" class="callback-form">
            <input type="hidden" name="form-name" value="callback-request" />
            
            <!-- Honeypot for bots -->
            <div class="honey-pot" style="display: none;">
                <label>Don't fill this out if you're human: <input name="bot-field" /></label>
            </div>

            <div class="form-fields">
                <div class="form-field">
                    <label for="callbackName" class="form-label">Name</label>
                    <input 
                        type="text" 
                        id="callbackName" 
                        name="name" 
                        class="form-input" 
                        required
                        placeholder="Your full name"
                    />
                </div>

                <div class="form-field">
                    <label for="callbackPhone" class="form-label">Phone</label>
                    <input 
                        type="tel" 
                        id="callbackPhone" 
                        name="phone" 
                        class="form-input" 
                        required
                        placeholder="+1 (555) 123-4567"
                    />
                </div>

                <div class="form-field">
                    <label for="callbackEmail" class="form-label">E-Mail</label>
                    <input 
                        type="email" 
                        id="callbackEmail" 
                        name="email" 
                        class="form-input" 
                        required
                        placeholder="your@email.com"
                    />
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary callback-submit-btn">
                    <span>Request Callback</span>
                </button>

                <p class="privacy-notice small-text">
                    By submitting, you agree to our 
                    <a href="/privacy-policy" class="privacy-link">Privacy Policy</a> 
                    and 
                    <a href="/terms-of-use" class="privacy-link">Terms of Use</a>.
                </p>
            </div>
        </form>

        <!-- Success message -->
        <div class="callback-success" id="callbackSuccess" style="display: none;">
            <div class="success-content">
                <svg class="success-icon" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="#10b981" stroke-width="2">
                    <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                    <polyline points="22,4 12,14.01 9,11.01"></polyline>
                </svg>
                <h4 class="subtitle">Thank you!</h4>
                <p class="body-text">We'll call you back within 24 hours.</p>
            </div>
        </div>
    </div>
</div>

<style>
/* Callback Form Styles - Extends Design System */
.callback-form-container {
    width: 100%;
    max-width: 500px;
}

.callback-subtitle {
    margin-bottom: var(--spacing-lg);
    color: var(--color-text-secondary);
}

.callback-form {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
}

.form-fields {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

.form-field {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
}

.form-label {
    font-size: var(--font-size-small);
    font-weight: var(--font-weight-medium);
    color: var(--color-text-primary);
}

/* Form Input - Extends glass-hover-effect system */
.form-input {
    padding: var(--spacing-sm) var(--spacing-md);
    border: 1px solid var(--glass-border);
    border-radius: var(--radius-button);
    background: var(--glass-bg);
    backdrop-filter: blur(20px) saturate(1.3);
    font-size: var(--font-size-body);
    color: var(--color-text-primary);
    transition: var(--transition-fast);
    outline: none;
}

.form-input::placeholder {
    color: var(--color-text-secondary);
}

/* Extend unified glass-hover-effect system */
.glass-hover-effect,
.card:hover,
.header:hover,
.btn-glass:hover,
.footer:hover,
.form-input:focus {
    backdrop-filter: blur(20px) saturate(1.3);
    border-color: var(--glass-border-hover);
    background: var(--glass-bg-hover);
    box-shadow: var(--shadow-glass-hover);
    transition: var(--transition-fast);
}

.form-input:hover {
    border-color: var(--glass-border-hover);
    background: var(--glass-bg-hover);
    transition: var(--transition-fast);
}

.form-actions {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    align-items: center;
}

.callback-submit-btn {
    width: 100%;
    justify-content: center;
}

.privacy-notice {
    text-align: center;
    margin-top: var(--spacing-sm);
}

.callback-success {
    text-align: center;
    padding: var(--spacing-xl) var(--spacing-md);
}

.success-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-md);
}

.success-icon {
    margin-bottom: var(--spacing-sm);
}

/* Mobile responsiveness */
@media (max-width: 768px) {
    .callback-form-container {
        max-width: 100%;
    }
    
    .form-input {
        padding: var(--spacing-md);
        font-size: var(--font-size-body);
    }
}
</style>

<script>
// Callback form functionality
document.addEventListener('DOMContentLoaded', () => {
    const callbackForm = document.getElementById('callbackForm');
    const callbackSuccess = document.getElementById('callbackSuccess');
    
    if (callbackForm && callbackSuccess) {
        callbackForm.addEventListener('submit', (e) => {
            e.preventDefault();
            
            // Get form data
            const formData = new FormData(callbackForm);
            
            // Submit to Netlify
            fetch('/', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams(formData).toString()
            })
            .then(() => {
                // Hide form and show success message
                callbackForm.style.display = 'none';
                callbackSuccess.style.display = 'block';
                
                // Reset form after delay
                setTimeout(() => {
                    callbackForm.reset();
                    callbackForm.style.display = 'block';
                    callbackSuccess.style.display = 'none';
                }, 5000);
            })
            .catch((error) => {
                console.error('Form submission error:', error);
                alert('There was an error submitting your request. Please try again.');
            });
        });
    }
});
</script> 